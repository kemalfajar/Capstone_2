# -*- coding: utf-8 -*-
"""Capstone 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_C_TK7L52u0A_mnV5-a-iHhh4Eg-taLA
"""

#Import tabulate untuk output table
from tabulate import tabulate

# Database karyawan yang telah tersedia

karyawan_db =[
    {
        "Nama": "Andi Wijaya",
        "Tanggal Lahir": "1995-03-14",
        "Nomer Induk Pegawai": "EMP001",
        "NIK": "317409123456",
        "Posisi": "Software Developer",
        "Divisi": "IT",
        "Tahun Onboarding": 2020,
        "Jenis Karyawan": "Kontrak",
        "Gaji": 8500000,
        "Pendidikan Terakhir": "S1 Teknik Informatika"
    },
    {
        "Nama": "Siti Rahma",
        "Tanggal Lahir": "1992-07-22",
        "Nomer Induk Pegawai": "EMP002",
        "NIK": "320507987654",
        "Posisi": "HR Specialist",
        "Divisi": "HRD",
        "Tahun Onboarding": 2018,
        "Jenis Karyawan": "Tetap",
        "Gaji": 9500000,
        "Pendidikan Terakhir": "S2 Psikologi"
    },
    {
        "Nama": "Budi Santoso",
        "Tanggal Lahir": "1988-11-05",
        "Nomer Induk Pegawai": "EMP003",
        "NIK": "317509112233",
        "Posisi": "Finance Manager",
        "Divisi": "Keuangan",
        "Tahun Onboarding": 2015,
        "Jenis Karyawan": "Tetap",
        "Gaji": 15000000,
        "Pendidikan Terakhir": "S2 Akuntansi"
    },
    {
        "Nama": "Dewi Kartika",
        "Tanggal Lahir": "1997-01-19",
        "Nomer Induk Pegawai": "EMP004",
        "NIK": "317608334455",
        "Posisi": "Data Analyst",
        "Divisi": "IT",
        "Tahun Onboarding": 2021,
        "Jenis Karyawan": "Probation",
        "Gaji": 7000000,
        "Pendidikan Terakhir": "S1 Statistika"
    },
    {
        "Nama": "Rudi Hartono",
        "Tanggal Lahir": "1990-05-11",
        "Nomer Induk Pegawai": "EMP005",
        "NIK": "320809556677",
        "Posisi": "Marketing Executive",
        "Divisi": "Pemasaran",
        "Tahun Onboarding": 2017,
        "Jenis Karyawan": "Kontrak",
        "Gaji": 6000000,
        "Pendidikan Terakhir": "S1 Manajemen"
    },
    {
        "Nama": "Ayu Lestari",
        "Tanggal Lahir": "1994-09-30",
        "Nomer Induk Pegawai": "EMP006",
        "NIK": "317710778899",
        "Posisi": "UI/UX Designer",
        "Divisi": "IT",
        "Tahun Onboarding": 2019,
        "Jenis Karyawan": "Tetap",
        "Gaji": 8000000,
        "Pendidikan Terakhir": "S1 Desain Komunikasi Visual"
    },
    {
        "Nama": "Fahmi Hakim",
        "Tanggal Lahir": "1991-12-15",
        "Nomer Induk Pegawai": "EMP007",
        "NIK": "321012990011",
        "Posisi": "Legal Officer",
        "Divisi": "Legal",
        "Tahun Onboarding": 2016,
        "Jenis Karyawan": "Tetap",
        "Gaji": 9000000,
        "Pendidikan Terakhir": "S1 Hukum"
    },
    {
        "Nama": "Lina Pratiwi",
        "Tanggal Lahir": "1996-04-08",
        "Nomer Induk Pegawai": "EMP008",
        "NIK": "317911223344",
        "Posisi": "Content Writer",
        "Divisi": "Pemasaran",
        "Tahun Onboarding": 2022,
        "Jenis Karyawan": "Intern",
        "Gaji": 4000000,
        "Pendidikan Terakhir": "S1 Sastra Inggris"
    },
    {
        "Nama": "Yusuf Maulana",
        "Tanggal Lahir": "1989-08-21",
        "Nomer Induk Pegawai": "EMP009",
        "NIK": "320113445566",
        "Posisi": "Project Manager",
        "Divisi": "Operasional",
        "Tahun Onboarding": 2014,
        "Jenis Karyawan": "Tetap",
        "Gaji": 14000000,
        "Pendidikan Terakhir": "S2 Manajemen Proyek"
    },
    {
        "Nama": "Melati Putri",
        "Tanggal Lahir": "1998-02-25",
        "Nomer Induk Pegawai": "EMP010",
        "NIK": "318014667788",
        "Posisi": "Customer Service",
        "Divisi": "Layanan Pelanggan",
        "Tahun Onboarding": 2023,
        "Jenis Karyawan": "Probation",
        "Gaji": 5000000,
        "Pendidikan Terakhir": "S1 Komunikasi"

    },
        {
        "Nama": "Robert Downey",
        "Tanggal Lahir": "1988-02-25",
        "Nomer Induk Pegawai": "EMP011",
        "NIK": "318014621312788",
        "Posisi": "HR Supervisor",
        "Divisi": "HRD",
        "Tahun Onboarding": 2023,
        "Jenis Karyawan": "Tetap",
        "Gaji": 15000000,
        "Pendidikan Terakhir": "S1 Psikologi"

    }
]

# ID untuk login
users = {
    "user001": "ahmadsenapan",
}

# Process login
def login():
    print("====== LOGIN ======")
    for attempt in range(3):
        user_id = input("ID: ")
        password = input("Password: ")
# validasi password dan user
        if user_id in users and users[user_id] == password:
            print("Login berhasil.\n")
            return user_id
        else:
            print("ID atau Password salah.\n")
    print("Terlalu banyak percobaan gagal. Program keluar.")
    exit()

# Tampilan Menu HR
def tampilkan_menu():
    print("\n====== MENU UTAMA ======")
    print("1. Tambah Karyawan (Create)")
    print("2. Lihat Data Karyawan (Read)")
    print("3. Ubah Data Karyawan (Update)")
    print("4. Hapus Karyawan (Delete)")
    print("5. Keluar Program (Exit)")

# Tampilan Menu Jika tidak ada data
def tampilkan_karyawan(data):
    if not data:
        print("Tidak ada data karyawan.")
    else:
        # Salin data agar tidak mengubah karyawan_db asli
        data_format = []
        for k in data:
            k_copy = k.copy()
            # Format Gaji dengan titik pemisah ribuan
            k_copy["Gaji"] = f"Rp{k_copy['Gaji']:,.0f}".replace(",", ".")
            data_format.append(k_copy)
        print(tabulate(data_format, headers="keys", tablefmt="grid", showindex=True))

# MENU Create Tambah Karyawan
def tambah_karyawan():
    print("\n--- Tambah Karyawan Baru ---")
    nama = input("Nama: ")
    tgl_lahir = input("Tanggal Lahir (YYYY-MM-DD): ")
    nik = input("NIK: ")
    posisi = input("Posisi: ")
    divisi = input("Divisi: ")
    tahun_onboarding = int(input("Tahun Onboarding: "))
    jenis_karyawan = input("Jenis Karyawan (Kontrak/Intern/Probation/etc): ")
    gaji = int(input("Gaji: "))
    pendidikan = input("Pendidikan Terakhir: ")

    no_pegawai = f"EMP{len(karyawan_db)+1:03d}"
#Format Data Karyawan
    karyawan = {
        "Nama": nama,
        "Tanggal Lahir": tgl_lahir,
        "Nomer Induk Pegawai": no_pegawai,
        "NIK": nik,
        "Posisi": posisi,
        "Divisi": divisi,
        "Tahun Onboarding": tahun_onboarding,
        "Jenis Karyawan": jenis_karyawan,
        "Gaji": gaji,
        "Pendidikan Terakhir": pendidikan
    }

    karyawan_db.append(karyawan)
    print("Karyawan berhasil ditambahkan.")

# Menu Update Data Karyawan
def ubah_karyawan():
    tampilkan_karyawan(karyawan_db)
    try:
        index = int(input("\nMasukkan nomor karyawan yang ingin diubah: "))
        if 0 <= index < len(karyawan_db):
            print("Masukkan data baru (kosongkan jika tidak ingin diubah):")
            for key in karyawan_db[index]:
                new_value = input(f"{key} [{karyawan_db[index][key]}]: ")
                if new_value:
                    if key in ["Gaji", "Tahun Onboarding"]:
                        new_value = int(new_value)
                    karyawan_db[index][key] = new_value
            print("Data karyawan berhasil diperbarui.")
        else:
            print("Nomor karyawan tidak valid.")
    except ValueError:
        print("Input tidak valid.")

# Menu Delete Karyawan
def hapus_karyawan():
    tampilkan_karyawan(karyawan_db)
    try:
        index = int(input("\nMasukkan nomor karyawan yang ingin dihapus: "))
        if 0 <= index < len(karyawan_db):
            del karyawan_db[index]
            print("Data karyawan berhasil dihapus.")
        else:
            print("Nomor karyawan tidak valid.")
    except ValueError:
        print("Input tidak valid.")

# Menu Read Karyawan

def menu_read():
    while True:
        print("\n=== MENU READ KARYAWAN ===")
        print("1. Lihat Semua Karyawan")
        print("2. Filter Karyawan")
        print("3. Sorting Karyawan")
        print("4. Hitung Statistik Pegawai")
        print("5. Kembali ke Menu Utama")
        pilihan = input("Pilih menu : ")
# Process input pilihan user 1-5
        if pilihan == "1":
          tampilkan_karyawan(karyawan_db)
        if pilihan == "2":
          filter_karyawan()
        elif pilihan == "3":
          sorting_karyawan()
        elif pilihan == "4":
          statistik_karyawan()
        elif pilihan == "5":
          break
        else:
          print("Pilihan tidak valid.")

  #filtrasi dan sorting karyawan

# Interface Sorting data karyawan
def sorting_karyawan():
    print("\n=== Sorting Karyawan ===")
    print("1. Berdasarkan Nama")
    print("2. Berdasarkan Tanggal Lahir")
    print("3. Berdasarkan Nomor Induk Pegawai")
    print("4. Berdasarkan NIK")
    print("5. Berdasarkan Posisi")
    print("6. Berdasarkan Divisi")
    print("7. Berdasarkan Tahun Onboarding")
    print("8. Berdasarkan Jenis Karyawan")
    print("9. Berdasarkan Gaji")
    print("10. Berdasarkan Pendidikan Terakhir")

    pilihan = input("Pilih kriteria sorting (1-10): ")
# Process input user
    if pilihan == "1":
        kriteria = "Nama"
    elif pilihan == "2":
        kriteria = "Tanggal Lahir"
    elif pilihan == "3":
        kriteria = "Nomor Induk Pegawai"
    elif pilihan == "4":
        kriteria = "NIK"
    elif pilihan == "5":
        kriteria = "Posisi"
    elif pilihan == "6":
        kriteria = "Divisi"
    elif pilihan == "7":
        kriteria = "Tahun Onboarding"
    elif pilihan == "8":
        kriteria = "Jenis Karyawan"
    elif pilihan == "9":
        kriteria = "Gaji"
    elif pilihan == "10":
        kriteria = "Pendidikan Terakhir"
    else:
        print("Pilihan tidak valid.")
        return
# Ascending / Descending data
    urutan = input("Urutan Ascending (A) atau Descending (D): ").upper()
    if urutan == "A":
        hasil = sorted(karyawan_db, key=lambda x: x[kriteria])
    elif urutan == "D":
        hasil = sorted(karyawan_db, key=lambda x: x[kriteria], reverse=True)
    else:
        print("Urutan tidak valid.")
        return
#Print data hasil Sorting
    print("\nHasil Sorting:")
    tampilkan_karyawan(hasil)

# Filtering data berdasarkan kriteria
def filter_karyawan():
    print("\n=== Filter Karyawan Berdasarkan Kriteria ===")
    print("1. Nama")
    print("2. Posisi")
    print("3. Divisi")
    pilihan = input("Pilih kriteria (1-3): ")
# Input pilihan di user
    if pilihan == "1":
        keyword = input("Masukkan nama: ").lower()
        hasil = [k for k in karyawan_db if keyword in k["Nama"].lower()]
    elif pilihan == "2":
        keyword = input("Masukkan posisi: ").lower()
        hasil = [k for k in karyawan_db if keyword in k["Posisi"].lower()]
    elif pilihan == "3":
        keyword = input("Masukkan divisi: ").lower()
        hasil = [k for k in karyawan_db if keyword in k["Divisi"].lower()]
    else:
        print("Pilihan tidak valid.")
        return
# Print Table hasil Filtrasi
    print("\nHasil Pencarian:")
    tampilkan_karyawan(hasil)


# Statistik karyawan
def statistik_karyawan():
    print("\n=== Statistik Pegawai ===")
    total_karyawan = len(karyawan_db)
    total_gaji = sum(k["Gaji"] for k in karyawan_db)
    rata_gaji = total_gaji / total_karyawan if total_karyawan else 0
    gaji_max = max(k["Gaji"] for k in karyawan_db)
    gaji_min = min(k["Gaji"] for k in karyawan_db)
#menghitung statistik
    jumlah_per_divisi = {}
    total_gaji_per_divisi = {}
    for k in karyawan_db:
        divisi = k["Divisi"]
        jumlah_per_divisi[divisi] = jumlah_per_divisi.get(divisi, 0) + 1
        total_gaji_per_divisi[divisi] = total_gaji_per_divisi.get(divisi, 0) + k["Gaji"]
#Print Total Statistik Semuanya
    print(f"Total Karyawan         : {total_karyawan}")
    print(f"Total Gaji Seluruhnya  : Rp{total_gaji:,}")
    print(f"Rata-rata Gaji         : Rp{rata_gaji:,.2f}")
    print(f"Gaji Maksimum          : Rp{gaji_max:,}")
    print(f"Gaji Minimum           : Rp{gaji_min:,}")

    print("\nJumlah Karyawan per Divisi:")
    for divisi, jumlah in jumlah_per_divisi.items():
        print(f"  - {divisi}: {jumlah} orang")

    print("\nTotal Gaji per Divisi:")
    for divisi, total in total_gaji_per_divisi.items():
        print(f"  - {divisi}: Rp{total:,}")


# Print Menu utama
user_id = login()

while True:
    tampilkan_menu()
    pilihan = input("Pilihan = ? ")

    if pilihan == "1":
        tambah_karyawan()
    elif pilihan == "2":
        menu_read()
    elif pilihan == "3":
        ubah_karyawan()
    elif pilihan == "4":
        hapus_karyawan()
    elif pilihan == "5":
        print("Keluar dari program.")
        break
    else:
        print("Pilihan tidak valid. Silakan pilih ulang.")


















